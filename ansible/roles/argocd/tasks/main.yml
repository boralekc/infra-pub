---
- name: Add Helm repository
  kubernetes.core.helm_repository:
    kubeconfig: "{{ kubeconfig }}"
    name: argo
    repo_url: https://argoproj.github.io/argo-helm
    state: present
  notify: Initialize Helm client

- name: Generate bcrypt hash of admin password
  community.general.htpasswd:
    path: /tmp/argocd_htpasswd
    name: admin
    password: "{{ user_password }}"
    crypt_scheme: bcrypt
  register: htpasswd_output

- name: Extract bcrypt hash from htpasswd file
  shell: "cut -d ':' -f 2 /tmp/argocd_htpasswd"
  register: bcrypt_hash

- name: Install argocd
  kubernetes.core.helm:
    kubeconfig: "{{ kubeconfig }}"
    name: argo
    chart_ref: argo/argo-cd
    state: present
    release_namespace: "{{ app_namespace }}"
    create_namespace: true
    release_state: present
    values:
      global:
        domain: "{{ app_host }}"
      configs:
        params:
          server.insecure: true
        secret:
          argocdServerAdminPassword: "{{ bcrypt_hash.stdout }}"
      server:
        ingress:
          enabled: true
          annotations:
            nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
            nginx.ingress.kubernetes.io/proxy-body-size: "512m"
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: argoissuer
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
            kubernetes.io/tls-acme: "true"
          ingressClassName: nginx
          hostname: "{{ app_host }}"
          tls: true
          extraTls:
            - hosts:
                - "{{ app_host }}"
              secretName: argocd-server-tls
      controller:
        volumeMounts:
          - mountPath: /tmp
            name: argocd-pass
        volumes:
          - name: argocd-pass
            emptyDir: {}
