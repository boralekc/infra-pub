- name: Create Keycloak namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ app_namespace }}"
    state: present

- name: Download PostgreSQL SSL certificate
  shell: |
    mkdir -p ~/.postgresql
    wget "https://storage.yandexcloud.net/cloud-certs/CA.pem" --output-document ~/.postgresql/root.crt

- name: Create PostgreSQL SSL Secret
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: postgres-ssl-secret
        namespace: "{{ app_namespace }}"
      type: Opaque
      data:
        root.crt: "{{ lookup('file', '~/.postgresql/root.crt') | b64encode }}"

- name: Install keycloak
  kubernetes.core.helm:
    kubeconfig: "{{ kubeconfig }}"
    name: keycloak
    chart_ref: oci://registry-1.docker.io/bitnamicharts/keycloak
    state: present
    release_namespace: "{{ app_namespace }}"
    release_state: present
    values:
      installCRDs: true
      production: true
      proxy: edge
      ingress:
        enabled: true
        ingressClassName: nginx
        apiVersion: networking.k8s.io/v1
        hostname: "{{ app_host }}"
        annotations:
          nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
          nginx.ingress.kubernetes.io/affinity: "cookie"
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-body-size: "512m"
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: letskeycloak
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          kubernetes.io/tls-acme: "true"
        tls: true
      adminIngress:
        enabled: true
        ingressClassName: nginx
        apiVersion: networking.k8s.io/v1
        hostname: "admin-{{ app_host }}"
        annotations:
          nginx.ingress.kubernetes.io/proxy-buffer-size: "32k"
          nginx.ingress.kubernetes.io/affinity: "cookie"
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-body-size: "512m"
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: letskeycloakadmin
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          kubernetes.io/tls-acme: "true"
        tls: true
      postgresql:
        enabled: false
      externalDatabase:
        host: "{{ db_host }}"
        port: "{{ db_port }}"
        user: "{{ db_user }}"
        database: "{{ db_name }}"
        password: "{{ db_password }}"
      auth:
        adminUser: "{{ user_name }}"
        adminPassword: "{{ user_password }}"       
      extraVolumes:
        - name: postgres-ssl-volume
          secret:
            secretName: postgres-ssl-secret
      extraVolumeMounts:
        - name: postgres-ssl-volume
          mountPath: /home/runner/.postgresql
          readOnly: true
      extraEnvVars:
        - name: KEYCLOAK_PROXY_HEADERS
          value: "xforwarded"